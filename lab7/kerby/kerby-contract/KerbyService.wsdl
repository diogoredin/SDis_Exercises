<?xml version="1.0" encoding="UTF-8"?>
<!--

  WSDL contract for Kerby.

  Kerby is an implementation of a simplified Kerberos protocol.
  Kerby implements Saut and TGS in a single server.

  This WSDL defines the operations provided by the Web Service, and should not be modified.
  For more information, see sections
  wsdl:service, wsdl:portType, wsdl:types and wsdl:binding below
-->
<definitions xmlns="http://schemas.xmlsoap.org/wsdl/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:tns="http://kerby.sdis.tecnico.ulisboa.pt/" xmlns:wsam="http://www.w3.org/2007/05/addressing/metadata" xmlns:wsp="http://www.w3.org/ns/ws-policy" xmlns:wsp1_2="http://schemas.xmlsoap.org/ws/2004/09/policy" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="KerbyService" targetNamespace="http://kerby.sdis.tecnico.ulisboa.pt/">

  <!--  XML Schema Definition (XSD) of data types. -->
  <types>
    <xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" targetNamespace="http://kerby.sdis.tecnico.ulisboa.pt/" version="1.0">
      <xs:element name="BadTicketRequest" type="tns:BadTicketRequest" />
      <xs:element name="requestTicket" type="tns:requestTicket" />
      <xs:element name="requestTicketResponse" type="tns:requestTicketResponse" />
      <xs:complexType name="authView">
        <xs:sequence>
          <xs:element minOccurs="0" name="x" type="xs:string" />
          <xs:element minOccurs="0" name="timeRequest" type="xs:dateTime" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="requestTimeView">
        <xs:sequence>
          <xs:element minOccurs="0" name="timeRequest" type="xs:dateTime" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="cipheredView">
        <xs:sequence>
          <xs:element minOccurs="0" name="data" type="xs:base64Binary" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="sessionKeyView">
        <xs:sequence>
          <xs:element minOccurs="0" name="encodedKeyXY" type="xs:base64Binary" />
          <xs:element name="nounce" type="xs:long" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ticketView">
        <xs:sequence>
          <xs:element minOccurs="0" name="x" type="xs:string" />
          <xs:element minOccurs="0" name="y" type="xs:string" />
          <xs:element minOccurs="0" name="time1" type="xs:dateTime" />
          <xs:element minOccurs="0" name="time2" type="xs:dateTime" />
          <xs:element minOccurs="0" name="encodedKeyXY" type="xs:base64Binary" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="requestTicket">
        <xs:sequence>
          <xs:element minOccurs="0" name="client" type="xs:string" />
          <xs:element minOccurs="0" name="server" type="xs:string" />
          <xs:element name="nounce" type="xs:long" />
          <xs:element name="ticketDuration" type="xs:int" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="requestTicketResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:sessionKeyAndTicketView" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="sessionKeyAndTicketView">
        <xs:sequence>
          <xs:element minOccurs="0" name="sessionKey" type="tns:cipheredView" />
          <xs:element minOccurs="0" name="ticket" type="tns:cipheredView" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="BadTicketRequest">
        <xs:sequence>
          <xs:element minOccurs="0" name="message" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
  </types>

  <!--  Messages use elements defined in the schema. -->
  <message name="requestTicket">
    <part element="tns:requestTicket" name="parameters" />
  </message>
  <message name="requestTicketResponse">
    <part element="tns:requestTicketResponse" name="parameters" />
  </message>
  <message name="BadTicketRequest">
    <part element="tns:BadTicketRequest" name="fault" />
  </message>

  <!--  Port type (interface). -->
  <!--  Each operation has input, output and fault messages. -->
  <portType name="KerbyPortType">
    <operation name="requestTicket">
      <input message="tns:requestTicket" wsam:Action="http://kerby.sdis.tecnico.ulisboa.pt/KerbyPortType/requestTicketRequest" />
      <output message="tns:requestTicketResponse" wsam:Action="http://kerby.sdis.tecnico.ulisboa.pt/KerbyPortType/requestTicketResponse" />
      <fault message="tns:BadTicketRequest" name="BadTicketRequest" wsam:Action="http://kerby.sdis.tecnico.ulisboa.pt/KerbyPortType/requestTicket/Fault/BadTicketRequest" />
    </operation>
  </portType>

  <!--  Binding defines the actual technologies to use. -->
  <binding name="KerbyPortBinding" type="tns:KerbyPortType">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http" />
    <operation name="requestTicket">
      <soap:operation soapAction="" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="BadTicketRequest">
        <soap:fault name="BadTicketRequest" use="literal" />
      </fault>
    </operation>
  </binding>

  <!--  Service defines ports. -->
  <!--  Each port is an abstract port type made concrete by a binding. -->
  <service name="KerbyService">
    <port binding="tns:KerbyPortBinding" name="KerbyPort">
      <soap:address location="http://sec.sd.rnl.tecnico.ulisboa.pt:8888/kerby" />
    </port>
  </service>
</definitions>
